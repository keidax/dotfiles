# vim: ft=gitconfig sw=8
[include]
        path = ~/.gitconfig.local
[core]
        # Don't introduce any Windows-style line endings
        autocrlf = input
[push]
        # Safer default push setting (set to squelch warning message)
        default = simple
[fetch]
        # Remove stale remote references on every fetch or pull
        prune = true
[interactive]
        # Highlight line differences during interactive staging
        diffFilter = diff-highlight
[diff]
        # Even smarter about hunk boundaries (experimental, >=git 2.11)
        indentHeuristic = true
        # Show full submodule diffs
        submodule = diff
        algorithm = histogram
[rebase]
        # For use with commit --fixup
        autosquash = true
        # Can rebase with dirty changes
        autostash = true
[pager]
        # Don't wrap long log lines
        log = less -S
        # Highlight line differences when shown in a pager
        show = $DOTDIR/bin/git-diff-decorate.sh | less
        diff = $DOTDIR/bin/git-diff-decorate.sh | less
        # Don't page list of branches if they fit on screen
        branch = less -FX
[help]
        # Automatically use git's "Did you mean...?" after 1 second
        autocorrect = 10
[advice]
        waitingForEditor = false
[color]
        # Make sure colors are turned on
        ui = true
[color "status"]
        untracked = yellow
[color "diff"]
        meta = yellow
        frag = cyan bold
        # TODO: not supported by diff-so-fancy
        func = magenta bold
[color "diff-highlight"]
        # Background highlight values for base16-shell
        oldHighlight = red bold 19
        oldReset = normal no-bold black
        oldNormal = red
        newHighlight = green bold 19
        newReset = normal no-bold black
        newNormal = green
[stash]
        showPatch = true
[alias]
        # Complex commands and scripts
        alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /

        bclean = !git-clean-merged

        # Aliases to git commands
        a = add
        ap = add --patch

        b = branch
        bs = branch --sort=-committerdate

        c = commit --verbose
        ca = commit --verbose --amend
        cf = commit --verbose --fixup

        co = checkout
        cob = checkout -b
        com = checkout master
        coa = "! git checkout -- $1; git submodule foreach --recursive '[ -f $1 ] && git checkout -- $1 || true'"

        d = diff
        ds = diff --staged
        dw = diff -w

        h = help

        l = log --graph --date=relative --pretty=format:'%Cred%>|(16)%h %C(auto)%s%d %Cgreen%ad %C(dim white)%cN%C(nodim)'

        mt = mergetool

        pfwl = push --force-with-lease
        push-first = ! git push --set-upstream origin $(git symbolic-ref --short HEAD)

        rc = rebase --continue
        riom = rebase -i origin/master
        rom = rebase origin/master

        sl = stash list
        sp = stash pop
        srs = ! git stash save && git riom && git stash pop
        ss = stash save
        sw = stash show

        s = status

        su = submodule update --init --recursive
[rerere]
        enabled = true
[merge]
        tool = diffconflicts
[mergetool]
        keepBackup = false
        prompt = false
[mergetool "diffconflicts"]
        cmd = nvim +DiffConflicts "$MERGED" "$BASE" "$LOCAL" "$REMOTE"
        trustExitCode = true
