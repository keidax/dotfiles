#!/bin/sh

# Some helper functions
prepend_to_path () {
    if [ -d "$1" ] ; then
        PATH="$1:$PATH"
    fi
}

append_to_path () {
    if [ -d "$1" ] ; then
        PATH="$PATH:$1"
    fi
}

prepend_to_manpath () {
    if [ -d "$1" ] ; then
        if [ -n "$MANPATH" ]; then
            MANPATH="$1:$MANPATH"
        else
            MANPATH="$1"
        fi
    fi
}

# Add brew coreutils without 'g' prefix
if [ "$OS" = "Darwin" ] ; then
    prepend_to_path "$(brew --prefix)/opt/coreutils/libexec/gnubin"
fi

# Include user pip packages
if command_exists python3 ; then
    prepend_to_path "$(python3 -c "import os, site; print(os.path.join(site.USER_BASE, 'bin'))")"
elif command_exists python2 ; then
    prepend_to_path "$(python2 -c "import os, site; print(os.path.join(site.USER_BASE, 'bin'))")"
fi

# Include user's local bin folder(s)
prepend_to_path "$HOME/.local/bin"
prepend_to_path "$HOME/bin"

# Include current dir on PATH
PATH=".:$PATH"

# Include RubyGems bin folder
if command_exists gem ; then
    append_to_path "$(ruby -e 'print Gem.user_dir')/bin"
fi

# Ensure RVM is at the end of PATH
append_to_path "$HOME/.rvm/bin"

export PATH

# Add man pages from brew coreutils
if [ "$OS" = "Darwin" ] ; then
    prepend_to_manpath "$(brew --prefix)/opt/coreutils/libexec/gnuman"
fi

# Include local utility documentation
prepend_to_manpath "$HOME/.zplug/doc/man"
prepend_to_manpath "$HOME/.fzf/man"

# MANPATH should be prefixed by a colon, so it is appended to the default
# man search path instead of overriding it.
[ -n "$MANPATH" ] && {
    [ "$MANPATH" = "${MANPATH#:}" ] && MANPATH=":$MANPATH"
    export MANPATH
}
