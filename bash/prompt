#!/bin/bash
## Prompt setup ##

# Use nice symbols if our terminal can handle them, otherwise define fallbacks
if ~/.dotfiles/bin/detect-utf.sh; then
    CMD_SYMBOL=λ
    TRIM_DIR_SYMBOL=…
else
    CMD_SYMBOL=$
    TRIM_DIR_SYMBOL=..
fi

# Generate color variables
# Using tput is more portable than writing the terminal codes directly.
reset=$(tput sgr0)
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
purple=$(tput setaf 5)
cyan=$(tput setaf 6)
white=$(tput setaf 7)
bold=$(tput bold)

# Export jobs as <running>|<stopped>
function jobscount(){
    stopped_cnt=$(jobs -s | wc -l)
    running_cnt=$(jobs -r | wc -l)
    if [ "$stopped_cnt" -eq 0 -a "$running_cnt" -eq 0 ]; then
	_NUM_JOBS=""
    else
        _NUM_JOBS="$running_cnt|$stopped_cnt "
    fi
    # Clean up temporary variables
    unset stopped_cnt running_cnt
}

# Trim working directory to last 3 dirs
function trim_wd {
    _TRIMMED_PWD=$(echo "${PWD}" | sed "s&${HOME}&~&" | sed "s&.*./\([^/]*/[^/]*/[^/]*\)$&${TRIM_DIR_SYMBOL}/\1&")
}

# Recalculate running jobs and working directory for every prompt
function prompt_command {
    jobscount
    trim_wd
}

PROMPT_COMMAND=prompt_command

# Finally, assign PS1. Output is:
# - chroot name, if in a chroot
# - Previous exit code, if nonzero
# - Username
# - Shortened working directory
# - Number of running and suspended jobs attached to this shell
#
# Colors are wrapped in \[ \] escapes, because they are nonprintable.
# Variables in double quotes are expanded now; single-quoted strings are
# evaluated on every prompt.

export PS1="\[$purple\]${CHROOT_NAME:+($CHROOT_NAME) }\[$red\]"'$([[ $? -eq 0 ]] || echo  "$? ")'"\[$green\]\u \[$blue$bold\]"'$_TRIMMED_PWD '"\[$yellow\]"'$_NUM_JOBS'"\[$reset\]$CMD_SYMBOL "

# Clean up color variables
unset reset red green yellow blue purple cyan bold
